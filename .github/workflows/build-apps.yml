name: Build Apps (Reusable)

on:
  workflow_call:
    inputs:
      upload_release_artifacts:
        description: 'Whether to upload build artifacts to a release'
        required: false
        type: boolean
        default: false
      upload_pr_artifacts:
        description: 'Whether to upload build artifacts as GitHub Actions artifacts'
        required: false
        type: boolean
        default: false
      release_tag:
        description: 'Release tag name for artifact upload'
        required: false
        type: string
        default: ''
      checkout_ref:
        description: 'Git ref to checkout'
        required: false
        type: string
        default: ''

jobs:
  build-android:
    name: Build Android APK
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          ref: ${{ inputs.checkout_ref || github.ref }}

      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version: 'lts/*'
          cache: 'npm'

      - name: Setup Java
        uses: actions/setup-java@v5
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'

      - name: Install dependencies
        run: npm ci

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Make Gradlew executable
        run: chmod +x android/gradlew

      - name: Build Android APK
        run: npm run build:android:release

      - name: Upload Android APK as Artifact
        if: inputs.upload_pr_artifacts == true
        uses: actions/upload-artifact@v5
        with:
          name: android-apk
          path: android/app/build/outputs/apk/release/app-release.apk
          retention-days: 7

      - name: Upload Android APK to Release
        if: inputs.upload_release_artifacts == true
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ inputs.release_tag }}
          files: android/app/build/outputs/apk/release/app-release.apk
          token: ${{ secrets.GITHUB_TOKEN }}

  build-ios-simulator:
    name: Build iOS Simulator
    runs-on: macos-15

    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          ref: ${{ inputs.checkout_ref || github.ref }}

      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '26'

      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version: 'lts/*'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.4'
          bundler-cache: true

      - name: Cache CocoaPods
        uses: actions/cache@v4
        with:
          path: ios/Pods
          key: ${{ runner.os }}-pods-xcode26-${{ hashFiles('**/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-xcode26-

      - name: Install CocoaPods dependencies
        run: |
          cd ios
          pod install --repo-update

      - name: Build iOS Simulator app
        run: npm run build:ios:simulator:release

      - name: Upload iOS Simulator app as Artifact
        if: inputs.upload_pr_artifacts == true
        uses: actions/upload-artifact@v5
        with:
          name: ios-simulator-app
          path: ios/build/DerivedData/VodQAReactNative-simulator-release.zip
          retention-days: 7

      - name: Upload iOS Simulator app to Release
        if: inputs.upload_release_artifacts == true
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ inputs.release_tag }}
          files: ios/build/DerivedData/VodQAReactNative-simulator-release.zip
          token: ${{ secrets.GITHUB_TOKEN }}

